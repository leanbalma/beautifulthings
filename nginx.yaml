kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: nginx
  labels:
    name: nginx
    app: nginx
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        name: nginx
        app: nginx
      annotations:
        config-version: "9"
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      terminationGracePeriodSeconds: 0
      containers:
      - image: nginx:1.15.3-alpine
        name: nginx
        resources:
          limits:
            cpu: "100m"
        ports:
        - name: http
          containerPort: 80
          hostPort: 80
        volumeMounts:
        - name: "config"
          mountPath: "/etc/nginx"
        - name: beautifulthings-tls
          mountPath: "/etc/tls/beautifulthings"
      volumes:
      - name: config
        configMap:
          name: nginx-conf
      - name: beautifulthings-tls
        secret:
          secretName: beautifulthings-tls

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    worker_processes 1;
    error_log /dev/stdout info;

    events {
      worker_connections 10;
    }

    http {
      access_log /dev/stdout;

      server {
        listen 80;
        listen 443 ssl;
        server_name server.beautifulthings.app;
        ssl_certificate     /etc/tls/beautifulthings/tls.crt;
        ssl_certificate_key /etc/tls/beautifulthings/tls.key;

        location / {
          proxy_read_timeout 200;
          proxy_pass http://beautifulthings.default.svc.cluster.local:8080;
        }
      }
    }
